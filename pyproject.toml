[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = ["jam089 <jam089@mail.ru>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.5"
uvicorn = {extras = ["standard"], version = "^0.32.1"}
sqlalchemy = {extras = ["asyncaio"], version = "^2.0.36"}
asyncpg = "^0.30.0"
alembic = "^1.14.0"
pydantic-settings = "^2.6.1"
aiokafka = "^0.12.0"

[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
python-dotenv = "^1.0.1"
mypy = "^1.18.2"
pytest-mypy = "^1.0.1"
pytest = "^8.4.2"
ruff = "^0.14.0"
pytest-asyncio = "^1.2.0"
httpx = "^0.28.1"
factory-boy = "^3.3.3"
pytest-mock = "^3.15.1"
testcontainers = {extras = ["kafka", "postgres"], version = "^4.13.2"}

[tool.pytest.ini_options]
pythonpath = [
    ".",
    "app",
]
markers = [
    "integration: mark tests as integration tests",
    "unit: mark tests as unit-tests",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = 3.12
plugins = [
    'pydantic.mypy',
    "sqlalchemy.ext.mypy.plugin",
    ]
ignore_missing_imports = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
check_untyped_defs = true
disallow_untyped_defs = true
strict_optional = true

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",
    "F",
    "I",
#    "UP",
    "B",
    "SIM"
]
ignore = ["E501"]

[tool.ruff.format]
quote-style = "double"
